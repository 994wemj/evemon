<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="CharacterPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYG
        BwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoK
        CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCACAAIADASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD8z0gJPzfkKnitWP8ADgVbgssHhfzq3BYnP3f0oAoxWQJ+7+Oa
        sx2Jbjb+laMWng8lcfhVqHTsn7mfc0AZSWH+yRU6ae390H8K149MbOP5CpJrO3tYXubmRY441LSSSMFV
        QO5J6CgDHGnc/cApw05c8r+lcn4t+PGjadI9l4UsBeupwbmbKxZ9h1b9PxrjL/4xfEG+kLLrQgXORHbw
        IoH44J/WgD2A6amOAfypp04f3a8k034z+P8AT3DSapHcqP8Alnc26kfmoB/Wu78GfHDw7rsyWHiK2Gn3
        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
        iiigAooooA//2Q==
</value>
  </data>
  <data name="ShipPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAIAAAD8GO2jAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAlwSFlzAAAOvQAA
        Dr0BR/uQrQAAAglJREFUSEvtlM2nglEQxvsjIyIiUqJVtIyI1CYi2tQm4hKJVhGReGkVKa0iUiIiok33
        dz05vXL7uG8fi6tZHHPmzMxzzjNnxnV4sbhenP/wAbjJ8H+laDqdftlkMplARbfb7XQ6MqPsdjuzxXKJ
        q98pGo/H+Xze7XanUqloNJrL5YgPhUKFQgEjRxgzmUwymYzFYmyRvwHIm1yj0ciyrEAgMJvNPB4POkaO
        eKLX6wXgyt2V5FqRBbDf730+H48gHVsBLBYLlOcAkI7spGu32wag1+sFg0EAEokEj+BlzikiUsxsNhsB
        INDVbDZNDVqt1kMA5uJS4IcvRManUXQGYC77DoBIJAIM4oQiqrdarYhk1Xc0itI5b7SbI+x+h7cMu0aj
        QTcxcIbDISTw/+hbVok+jHRaQQ7L5ZIQFK0EMl2UAcFCo5w62e/3wybWUqkUj8cZOOFwmC3DoF6vCwAf
        dADkwCzabrcYtRKYTqeVAclms8yofr9/HBV4EKZjE2PidRHZjcKWbrADcJtarSYApWI9AfDbmIjXAXjB
        YDAwSc8AmByMjYsAgHOFRwCKxSLz4yIARWNkcsxkns/nXJPqGVrsFBkHRhMhchYhFMYAgKcB9fNNeR38
        lsvlSqUCDwRUq1VjVw3kg2J3wE3FJxAAVgnOFHm9Xh8B7u8aB55vaTQH97o/5POCm1x9Aw02nHVcQh0J
        AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="WeaponPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAIAAAD8GO2jAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAlwSFlzAAAOvQAA
        Dr0BR/uQrQAAAglJREFUSEvtlM2nglEQxvsjIyIiUqJVtIyI1CYi2tQm4hKJVhGReGkVKa0iUiIiok33
        dz05vXL7uG8fi6tZHHPmzMxzzjNnxnV4sbhenP/wAbjJ8H+laDqdftlkMplARbfb7XQ6MqPsdjuzxXKJ
        q98pGo/H+Xze7XanUqloNJrL5YgPhUKFQgEjRxgzmUwymYzFYmyRvwHIm1yj0ciyrEAgMJvNPB4POkaO
        eKLX6wXgyt2V5FqRBbDf730+H48gHVsBLBYLlOcAkI7spGu32wag1+sFg0EAEokEj+BlzikiUsxsNhsB
        INDVbDZNDVqt1kMA5uJS4IcvRManUXQGYC77DoBIJAIM4oQiqrdarYhk1Xc0itI5b7SbI+x+h7cMu0aj
        QTcxcIbDISTw/+hbVok+jHRaQQ7L5ZIQFK0EMl2UAcFCo5w62e/3wybWUqkUj8cZOOFwmC3DoF6vCwAf
        dADkwCzabrcYtRKYTqeVAclms8yofr9/HBV4EKZjE2PidRHZjcKWbrADcJtarSYApWI9AfDbmIjXAXjB
        YDAwSc8AmByMjYsAgHOFRwCKxSLz4yIARWNkcsxkns/nXJPqGVrsFBkHRhMhchYhFMYAgKcB9fNNeR38
        lsvlSqUCDwRUq1VjVw3kg2J3wE3FJxAAVgnOFHm9Xh8B7u8aB55vaTQH97o/5POCm1x9Aw02nHVcQh0J
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>