<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ilIcons.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ilIcons.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACm
        CgAAAk1TRnQBSQFMAgEBAwEAAQQBAAEEAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEKYAAZcBkgGPAf8B+gH7AfoB/wH5AfgB+QH/A/cB/wL2AfUB/wL0AfUB/wPz
        Af8D8gH/AfAC8QH/A/AB/wPwAf/UAAGXAZIBjwH/A/sB/wHLAeABygH/AbkB3AG5Af8D9wH/A/UB/wP0
        Af8C8wHyAf8B8gHxAfIB/wPxAf8D8AH/mAABFAIBAhkCAQEhLAABdwE8ATIBoAFMARQBEQFyAZcBkgGP
        Af8D/AH/AbMBfQERAf8BtgGBAQ4B/wP4Af8D9gH/AZUBfQGBAf8BlQF9AYEB/wGVAX0BgAH/AvIB8QH/
        A/AB/0wAAQwBBQGtAfcBGAEFAZMB5QE3AQMBMgGCEAABMQEBARYBWAETAQcBqwHvAQ0BBgG1AfcgAAEU
        AgEBGQE9AU4BJgHWATcBSQEiAdgBDgIBAREcAAECAwEBAgMBAR4CBAEjAbQBigFwAeYBtAGMAXgB5gGX
        AZIBjwH/A/0B/wP8Af8B5AHQAaYB/wHgAcsBiQH/AvgB9wH/A/YB/wL1AfQB/wLzAfQB/wHzAvIB/wPx
        Af9MAAEWAQYBnQHpAgQBugH/ASkBAwFqAcEBNgECAS0BeggAATcBAgEuAXsBIAEEAXwB1gIEAaMB/wEW
        AQYBowHpHAABCwIBAQ0BSQFDASYBvQFNAZsBWQH/AUUBkwFQAf8BPAEPAQgBfiQAASMBBQEEASoBtgGQ
        AXsB5gG1AZABfAHmAZcBkgGPAf8D/gH/AekB3wHNAf8B2QHGAacB/wFRAdwBbAH/A/kB/wL3AfgB/wH2
        AfUB9gH/AvQB9QH/AfQC8wH/A/IB/0wAATcBAwE4AYYBJgEDAXQByQICAboB/wEqAQIBZwG+ATYBAgEs
        AXcBNgECASsBdgErAQIBXwG7AgMBoQH/ASYBAwFmAccBOAEEAToBhhgAAQ0CAQEQAUwBOgEkAbEBZQG1
        AXMB/wFSAX8BTAHqAVMBmAFaAfoBSgF7AUcB7gEbAgEBJRwAAZYBZQFYAcQBtwGSAXsB5gG+AZgBggHm
        AdYBuwGvAeYBlwGSAY8B/wH+Af8B/gH/Ab8BkQE5Af8BtwGDAQgB/wH7AfwB+wH/AvoB+QH/AfgC+QH/
        A/cB/wL2AfUB/wL0AfUB/wPzAf9QAAE4AQMBMQF9AScBAwFzAcgBDgEFAbIB8wEpAQYBegHJASkBBQF2
        AcYBEwEEAaQB7AEoAQMBbAHCATcBAwExAXsYAAEjAgIBMgFTAVYBNgHLAXMBwAGBAf8BWwF5AUwB4AEi
        AgIBMAFLATIBHwGmAWkBuwF2Af8BRgEsARoBqxwAAZ0BbwFiAc4BxgGbAYgB5gHGAZ8BjwHmAa0BhAFw
        AeABlwGSAY8F/wL+Av8B8QHmAdIB/wHYAb0BXgH/A/sB/wL5AfoB/wP4Af8D9wH/A/UB/wP0Af9UAAE4
        AQMBMAF5AScBBwGCAc0CCAHFAf8CCAHHAf8BJgEGAYUBzwE4AQMBLwF3HAABLQEGAQQBRQFZAXoBTAHj
        AVQBVgE3AccBHgECAQEBKQQAASABAwECAS0BZQGmAWsB9gFmAbIBcwH/ATEBBQEDAVIYAAFhAScBIgF8
        AcoBogGSAeYBzgGrAZoB5gFbASABGgF2AZcBkgGPCf8D/gH/AeMB0gF9Af8B+wH8AfsB/wH6AfsB+gH/
        AfkB+gH5Af8B9wL4Af8D9gH/AfQC9QH/VAABOwEHAS4BdAEsAQoBgwHLAgcBxQH/AgYBygH/ASkBCAGK
        Ac8BOgEFAS0BcyAAAQ0CAQEPAQcCAQEIDAABRAEcAREBhQFzAcABgQH/AVUBaAFBAdoBEAIBARQQAAE/
        AQ8BDQFOAcgBoAGMAeYBzgGpAZgB5gHGAaABkAHmASMBBQEEASsBiAGEAYEB/wHgAdkB0wH/AeAB2QHT
        Af8B4AHZAdMB/wHgAdkB0wH/AeAB2QHTAf8B4AHZAdMB/wHgAdkB0wH/AeAB2QHTAf8B4AHZAdMB/wHR
        AcsBxwH/UAABPgEJATIBegEyAQwBdgHCASkBHgHFAfABMAEOAYkBywEwAQ4BhwHKASIBGQHFAfMBMgEM
        AX0BwQE8AQcBMgF4MAABCgIBAQwBVAFeAToBzwFsAb0BegH/AUQBIQEUAZkQAAFKARgBFwFbAcgBogGS
        AeYBsQGKAXgB5gHIAaIBkQHmAUcBEgEQAVsMAAFNARcBEwFpAcYBsAGlAeYBwAGoAaAB5gGmAYsBfAHm
        ASECBQEoWAABQAEMATwBggE2AREBfgHGAhsByQH/AToBFAF4AcQBQQEMATQBegEtAQMBEQFGATUBEAGB
        AcYCGwHbAf8BNwERAYEBwwE9AQkBOwGCMAABJwEDAQIBOQFZAZQBXQH3AVcBoQFjAf8BMwEFAQMBWBAA
        AU8BGAEVAWEB1QG1AakB5gHaAb0BswHmAZoBaAFWAdkIAAEsAQcBBgE4AbUBmgGRAeYBwgGpAaAB5gG9
        AaQBmwHmAcgBswGrAeYBjwFkAVMBz1gAATEBHgGzAeUCJwHmAf8BNgESAX8ByAFBAQwBNgF/BAABAwIB
        AQIBQQEMATkBgAE3ARUBjAHLAiQB3wH/ASsBFwGzAeU0AAE+AREBCgF2AV4BogFpAf8BTgFwAUYB6gEf
        AQIBAQEsDAABqwF9AWoB2AHUAa8BogHmAdQBswGnAeYBzwGxAaQB5gGfAXUBZgHjAZEBZQFWAdcBvgGi
        AZYB5gHDAasBoQHmAcIBqgGjAeYBvgGfAYwB5gF7AUYBPwGkATIBDAELATxYAAEpASIB0AH3ATMBHwG3
        AeUBQAEMAToBghAAAUEBDQE/AYYBLwEeAbwB6QElAR4B0gH3NAABAwIBAQIBSAExAR4BsAFbAZ4BZQH/
        AUcBSQEsAdEBHAIBASYIAAGIAVEBSAGuAb4BmwGLAeYB0AGsAZ4B5gHMAasBoAHmAccBqgGcAeYBpQGB
        AXAB5gHEAaoBnAHmAb8BpQGcAeYBrgGTAYkB5gFwATsBNAGgEAABAgMBrAABEQIBARUBSAE8ASIBvgFF
        AS4BGwGvARgCAQEgEAABywGlAZYB5gHLAasBngHmAccBqQGaAeYBxQGlAZoB5gHOAbMBrQHmAbsBoQGS
        AeYBzAGzAasB5gGJAWEBTwHV1AABAgMBBAABAwIBAQIBtQGGAXwB0AHCAZsBgQHmAXYBPwE7AY4ByAGr
        AZwB5gGTAXEBXgHmBAABWgEkASABc9wAAQIDAQwAAQ0CAgEOAWMBLAEqAXgBQAESARABUAgAAQIDAVQA
        AUIBTQE+BwABPgMAASgDAAFAAwABEAMAAQEBAAEBBQABgBcAA/8BAAT/AfgDAAT/AfgDAAL/AfwB/wHg
        AwAB4wHHAfgBfwQAAeEBhwHwAX8BwAMAAeABBwHgAT8BgAMAAfABDwHAAT8BgAMAAfgBHwHCAR8BgAMA
        AfgBHwHnAQ8EAAHwAQ8B/wEPAgcCAAHgAQcB/wGHAYYBBwIAAeEBBwH/AcMBgAEHAgAB4wHHAf8BwQGA
        AR4CAAP/AeEB4AEfAgAE/wFAAb8CAAT/AbgB3wIACw==
</value>
  </data>
</root>
