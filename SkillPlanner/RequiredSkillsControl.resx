<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ilIcons.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ilIcons.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAY
        CgAAAk1TRnQBSQFMAgEBAwEAAQQBAAEEAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEKYAAZcBkgGPAf8B+gH7AfoB/wH5AfgB+QH/A/cB/wL2AfUB/wL0AfUB/wPz
        Af8D8gH/AfAC8QH/A/AB/wPwAf/UAAGXAZIBjwH/A/sB/wHLAeABygH/AbkB3AG5Af8D9wH/A/UB/wP0
        Af8C8wHyAf8B8gHxAfIB/wPxAf8D8AH/mAABFAIBAhkCAQEhLAABVAICAaABQgIBAXIBlwGSAY8B/wP8
        Af8BswGBARgB/wG2AYEBFQH/A/gB/wP2Af8BlQKBAf8BlQKBAf8BlQKBAf8C8gHxAf8D8AH/TAABNQEN
        AWkB9wFaAQUBHQHlAUgCAgGCEAABNwIBAVgBSgEIAUAB7wE2AQ4BbAH3IAABFAIBARkBXwEIAQYB1gFe
        AQgBBAHYAQ4CAQERHAABAgMBAQIDAQEaAgEBIwF5ASIBHQHmAXkBJAEeAeYBlwGSAY8B/wP9Af8D/AH/
        AeQB0AGmAf8B4AHLAYkB/wL4AfcB/wP2Af8C9QH0Af8C8wH0Af8B8wLyAf8D8QH/TAABUwEGASUB6QIM
        AboB/wFaAQMBBAHBAUUCAQF6CAABRQIBAXsBXgEEAQkB1gIMAaMB/wFTAQYBKAHpHAABCwIBAQ0BWwIC
        Ab0BVQGbAWEB/wFNAZMBWAH/AUcCAQF+JAABHwIBASoBeQElAR8B5gF5ASUBHwHmAZcBkgGPAf8D/gH/
        AekB3wHNAf8B2QHGAacB/wFYAdwBcwH/A/kB/wL3AfgB/wH2AfUB9gH/AvQB9QH/AfQC8wH/A/IB/0wA
        AUkCAgGGAV4BAwEFAckCCgG6Af8BWgICAb4BRAIBAXcBQwIBAXYBWQICAbsCCwGhAf8BWgEDAQQBxwFJ
        AgIBhhgAAQ0CAQEQAVcCAgGxAW0BtQF7Af8BXQEjARYB6gFTAW8BQgH6AVsBKwEaAe4BHAIBASUcAAFf
        AQUBBAHEAXkBJQEfAeYBeQEmAR8B5gF9AS4BLAHmAZcBkgGPAf8B/gH/Af4B/wG/AZEBQAH/AbcBgwEP
        Af8B+wH8AfsB/wL6AfkB/wH4AvkB/wP3Af8C9gH1Af8C9AH1Af8D8wH/UAABRgIBAX0BXAEDAQQByAFA
        AQoBUwHzAV4BAwEFAckBXAEDAQQBxgFRAQcBMAHsAVoBAwEEAcIBRQIBAXsYAAEkAgEBMgFcAQUBBAHL
        AXsBwAGBAf8BYAERAQwB4AEiAgEBMAFTAgIBpgFxAbsBfgH/AVUCAgGrHAABYwIHAc4BfQEmASIB5gF9
        ASYBJQHmAXIBFwEVAeABlwGSAY8F/wL+Av8B8QHmAdIB/wHYAb0BZQH/A/sB/wL5AfoB/wP4Af8D9wH/
        A/UB/wP0Af9UAAFFAgEBeQFbAQMBBgHNAhABxQH/AhABxwH/AV4BAwEGAc8BRAIBAXccAAEuAgEBRQFh
        ARUBDgHjAVoCAwHHAR4CAQEpBAABIQIBAS0BZAFeAT8B9gFuAbIBewH/ATQCAQFSGAABRgIBAXwBfQEm
        ASUB5gF9ASkBJgHmAUMCAQF2AZcBkgGPCf8D/gH/AeMB0gGBAf8B+wH8AfsB/wH6AfsB+gH/AfkB+gH5
        Af8B9wL4Af8D9gH/AfQC9QH/VAABQwIBAXQBXAEDAQYBywIPAcUB/wIOAcoB/wFeAQMBBwHPAUMCAQFz
        IAABDQIBAQ8BBwIBAQgMAAFJAgIBhQF7AcABgQH/AWABCwEJAdoBEAIBARQQAAEyAgEBTgF9ASYBJAHm
        AX0BKQEmAeYBfQEmASUB5gEfAgEBKwGIAYQBgQH/AeAB2QHTAf8B4AHZAdMB/wHgAdkB0wH/AeAB2QHT
        Af8B4AHZAdMB/wHgAdkB0wH/AeAB2QHTAf8B4AHZAdMB/wHgAdkB0wH/AdEBywHHAf9QAAFFAgEBegFa
        AQMBBAHCAVABEgFOAfABXAEDAQYBywFeAQMBBQHKAUoBDQFbAfMBWgEDAQQBwQFFAgEBeDAAAQoCAQEM
        AV4BBgEDAc8BdAG9AYEB/wFPAgIBmRAAATgCAQFbAX0BJgElAeYBeAEiAR4B5gF9ASYBJQHmATgCAQFb
        DAABPwIBAWkBfQEsASgB5gF5ASkBJgHmAXUBIgEfAeYBHgIBAShYAAFIAgIBggFcAQMBBAHGAiMByQH/
        AV0BAwEEAcQBRQIBAXoBLgIBAUYBXAEDAQQBxgIjAdsB/wFcAQMBBAHDAUgCAgGCMAABKAIBATkBYQFb
        AToB9wFfAaEBawH/ATcCAQFYEAABOwIBAWEBfQEsASkB5gGDAS8BLAHmAWcBDQEJAdkIAAEnAgEBOAF5
        ASYBJQHmAXwBKQEmAeYBeQEnASYB5gF9ASwBKQHmAWIBBwEGAc9YAAFdAQoBIgHlAi8B5gH/AVwBAwEF
        AcgBRwIBAX8EAAEDAgEBAgFIAgIBgAFcAQMBBgHLAiwB3wH/AV0BCQEiAeU0AAFDAgEBdgFmAaIBcQH/
        AV0BHQEUAeoBIAIBASwMAAFoAg0B2AF9ASwBJgHmAX0BLAEpAeYBfQEsAScB5gFvARoBFQHjAWYBDAEJ
        AdcBeQEmASUB5gF9ASkBJgHmAXwBKQEmAeYBeQEmASQB5gFTAgIBpAEpAgEBPFgAAUYBFQF+AfcBYAEK
        ASMB5QFIAgIBghAAAUkCAgGGAVkBDAEtAekBRAEPAX4B9zQAAQMCAQECAVYCAgGwAWMBngFtAf8BXQEG
        AQMB0QEcAgEBJggAAVcCAgGuAXkBJgEiAeYBfQEpASYB5gF9ASkBJgHmAX0BKQEmAeYBdQEfAR0B5gF9
        ASkBJgHmAXkBKAEmAeYBdQElASIB5gFUAgIBoBAAAQIDAawAARECAQEVAVoCAgG+AVYCAgGvARkCAQEg
        EAABfQEoASUB5gF9ASkBJgHmAX0BKQEmAeYBfQEoASYB5gF9ASwBKwHmAXkBJgElAeYBfQEsASkB5gFl
        AggB1dQAAQIDAQQAAQMCAQECAWQBCgEJAdABfAEmAR8B5gFNAgIBjgF9ASkBJgHmAXEBHgEYAeYEAAFD
        AgEBc9wAAQIDAQwAAQwCAQEOAUUCAQF4ATMCAQFQCAABAgMBVAABQgFNAT4HAAE+AwABKAMAAUADAAEQ
        AwABAQEAAQEFAAGAFwAD/wEABP8B+AMABP8B+AMAAv8B/AH/AeADAAHjAccB+AF/BAAB4QGHAfABfwHA
        AwAB4AEHAeABPwGAAwAB8AEPAcABPwGAAwAB+AEfAcIBHwGAAwAB+AEfAecBDwQAAfABDwH/AQ8CBwIA
        AeABBwH/AYcBhgEHAgAB4QEHAf8BwwGAAQcCAAHjAccB/wHBAYABHgIAA/8B4QHgAR8CAAT/AUABvwIA
        BP8BuAHfAgAL
</value>
  </data>
</root>
